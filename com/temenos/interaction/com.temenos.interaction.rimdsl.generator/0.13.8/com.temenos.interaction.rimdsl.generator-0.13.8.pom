<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.temenos.interaction</groupId>
		<artifactId>com.temenos.interaction.rimdsl.parent</artifactId>
		<!-- You should change this and the MANIFEST.MF to your versioning scheme -->
		<version>0.13.8</version>
		<relativePath>../com.temenos.interaction.rimdsl.parent/pom.xml</relativePath>
	</parent>
	<artifactId>com.temenos.interaction.rimdsl.generator</artifactId>
	<packaging>jar</packaging>
	<name>com.temenos.interaction.rimdsl.RimDsl - Generator</name>

  	<build>
        <plugins>
            <!-- Use maven-dependency-plugin just to generate a Manifest.mf with the Class-Path -->
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <outputFilterFile>true</outputFilterFile>
                            <prefix>@jar.prefix@</prefix>
                            <!-- see copy-resources and file.separator property -->
                            <pathSeparator>@jar.separator@</pathSeparator>
                            <outputFile>${project.build.directory}/classpath.properties</outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
    
            <!-- 
            Seems there are bugs around the use of pathSeparator.  Essentially the pathSeparator is trimmed
            and therefore ' ' is not used.
            http://maven.40175.n5.nabble.com/how-to-use-space-as-pathSeparator-in-dependency-generate-resources-td510393.html
            http://jira.codehaus.org/browse/MDEP-325
            -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <encoding>UTF-8</encoding>
                            <outputDirectory>${project.build.directory}/classes</outputDirectory>
                            <resources>          
                                <resource>
                                    <directory>src/templates</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <filters>
                                <filter>${project.build.directory}/classpath.properties</filter>
                                <filter>${basedir}/build.properties</filter>
                            </filters>
                        </configuration>            
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.temenos.interaction.rimdsl.generator.launcher.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- 
            Tried plenty of things to create and executable jar and none of them quite worked here.  Onejar was super easy to
            setup, but it had a problem when I tried to execute the generator.  So we've got quite a lot of moving parts to
            create this generator.jar
            
            http://left.subtree.org/2008/01/24/creating-executable-jars-with-maven/ 
            http://stackoverflow.com/questions/1757947/maven-include-dependent-libs-in-jar-without-unpacking-dependencies
            http://stackoverflow.com/questions/7633347/maven-assembly-create-jar-with-dependency-and-class-path
 
            maven-dependency-plugin:build-classpath
            http://stackoverflow.com/questions/1510071/maven-how-can-i-add-an-arbitrary-classpath-entry-to-a-jar
            -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/assembly.xml</descriptor>
                    </descriptors>
                     <finalName>rimgenerator</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                    <archive>
                        <manifest>
                            <!-- This bug means 'addClasspath' doesn't work http://jira.codehaus.org/browse/MASSEMBLY-334 --> 
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>com.temenos.interaction.rimdsl.generator.launcher.Launcher</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>attached</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration combine.self="override">
                </configuration>
            </plugin>
        </plugins>
  
	    <pluginManagement>
	    	<plugins>
	    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
	    		<plugin>
	    			<groupId>org.eclipse.m2e</groupId>
	    			<artifactId>lifecycle-mapping</artifactId>
	    			<version>1.0.0</version>
	    			<configuration>
	    				<lifecycleMappingMetadata>
	    					<pluginExecutions>
	    						<pluginExecution>
	    							<pluginExecutionFilter>
	    								<groupId>org.codehaus.mojo</groupId>
	    								<artifactId>build-helper-maven-plugin</artifactId>
	    								<versionRange>[1.3,)</versionRange>
	    								<goals>
	    									<goal>add-source</goal>
	    								</goals>
	    							</pluginExecutionFilter>
	    							<action>
	    								<ignore></ignore>
	    							</action>
	    						</pluginExecution>
	    						<pluginExecution>
	    							<pluginExecutionFilter>
	    								<groupId>
	    									org.apache.maven.plugins
	    								</groupId>
	    								<artifactId>
	    									maven-dependency-plugin
	    								</artifactId>
	    								<versionRange>
	    									[2.1,)
	    								</versionRange>
	    								<goals>
	    									<goal>build-classpath</goal>
	    								</goals>
	    							</pluginExecutionFilter>
	    							<action>
	    								<ignore></ignore>
	    							</action>
	    						</pluginExecution>
	    					</pluginExecutions>
	    				</lifecycleMappingMetadata>
	    			</configuration>
	    		</plugin>
	    	</plugins>
	    </pluginManagement>
	</build>
	
	<dependencies>
        <dependency>
            <groupId>com.temenos.interaction</groupId>
            <artifactId>com.temenos.interaction.rimdsl</artifactId>
            <version>${project.version}</version>
        </dependency>
        
         <dependency>
            <groupId>com.temenos.interaction</groupId>
            <artifactId>interaction-core</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
        	<groupId>org.eclipse.xtext</groupId>
        	<artifactId>org.eclipse.xtext.common.types</artifactId>
        	<version>${xtend-version}</version>
        </dependency>
		<dependency>
   			<groupId>org.eclipse.equinox</groupId>
   			<artifactId>common</artifactId>
		    <version>[3.6.200-v20130402-1505,]</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
		</dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>		
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
		</dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                    <version>1.6.2</version>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                    <version>1.6.2</version>
                </dependency>
	</dependencies>

<!-- SONAR TEST COVERAGE PROFILE-->
   <profiles>
    <profile>
        <id>coverage</id>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.13</version>
                    <configuration>
                        <argLine>${jacoco.agent.ut.arg}</argLine>
                        <!-- Specific to generate mapping between tests and covered code -->
                        <properties>
                            <property>
                                <name>listener</name>
                                <value>org.sonar.java.jacoco.JUnitListener</value>
                            </property>
                        </properties>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.16</version>
                    <configuration>
                        <argLine>-Xmx1024m -XX:MaxPermSize=256m ${jacoco.agent.it.arg}</argLine>
                        <!-- Specific to generate mapping between tests and covered code -->
                        <properties>
                            <property>
                                <name>listener</name>
                                <value>org.sonar.java.jacoco.JUnitListener</value>
                            </property>
                        </properties>
                        <!-- Let's put failsafe reports with surefire to have access to tests failures/success reports in sonar -->
                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info to be passed to the JVM hosting the code
being tested. -->
                        <execution>
                            <id>prepare-ut-agent</id>
                            <phase>process-test-classes</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${sonar.jacoco.reportPath}</destFile>
                                <propertyName>jacoco.agent.ut.arg</propertyName>
                                <append>true</append>
                            </configuration>
                        </execution>
                        <!-- Prepares a variable, jacoco.agent.it.arg, that contains the info to be passed to the JVM hosting the code
being tested. -->
                        <execution>
                            <id>prepare-it-agent</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${sonar.jacoco.itReportPath}</destFile>
                                <propertyName>jacoco.agent.it.arg</propertyName>
                                <append>true</append>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
        <dependencies>
            <dependency>
                <groupId>org.codehaus.sonar-plugins.java</groupId>
                <artifactId>sonar-jacoco-listeners</artifactId>
                <version>${sonar-jacoco-listeners.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.codehaus.sonar-plugins.java</groupId>
                <artifactId>sonar-jacoco-plugin</artifactId>
                <version>${sonar-jacoco-plugin.version}</version>
            </dependency>
        </dependencies>
    </profile>
</profiles>

    
</project>
